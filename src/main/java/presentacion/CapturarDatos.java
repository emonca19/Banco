/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import com.toedter.calendar.JDateChooser;
import entidadesPOJO.Cliente;
import entidadesPOJO.Cuenta;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import persistencia.ClienteDTO;
import persistencia.ConexionBD;

/**
 *
 * @author elimo
 */
public class CapturarDatos extends javax.swing.JFrame {

    private Timer temporizador;
    private JDateChooser dateChooser;

    /**
     * Creates new form CapturarDatos
     *
     * @param frame
     */
    public CapturarDatos(JFrame frame) {

        initComponents();

        setLocationRelativeTo(frame);
        crearDateChooser();
        limitarCalendario();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCP = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        btnSiguiente = new javax.swing.JButton();
        txtNumExterior = new javax.swing.JTextField();
        btnAtras = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellidoPaterno = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtApellidoMaterno = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnVerContraseña = new javax.swing.JButton();
        txtContraseña = new javax.swing.JPasswordField();
        txtConfirmarContraseña = new javax.swing.JPasswordField();
        jLabel17 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Codigo Postal:");

        jLabel11.setText("Calle");

        jLabel12.setText("Número exterior:");

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnAtras.setText("Volver atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre:");

        jLabel13.setText("Email:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Registrarte como cliente");

        jLabel3.setText("Apellido Paterno:");

        jLabel4.setText("Apellido Materno:");

        jLabel6.setText("Dia:");

        txtUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Usuario");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setText("Contraseña");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Confirmar Contraseña:");

        btnVerContraseña.setText("Ver");
        btnVerContraseña.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnVerContraseñaMousePressed(evt);
            }
        });

        txtContraseña.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel17.setText("Estado:");

        jLabel18.setText("Ciudad:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnAtras)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConfirmarContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtContraseña)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSiguiente)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnVerContraseña)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(160, 160, 160))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel17)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(80, 80, 80)
                                                .addComponent(jLabel11)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEstado))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                            .addComponent(txtCalle, javax.swing.GroupLayout.Alignment.LEADING))))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNumExterior, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(txtApellidoMaterno)
                                    .addComponent(txtCiudad))))))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel17)
                    .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumExterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(btnVerContraseña)
                    .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(btnSiguiente)
                    .addComponent(btnAtras)
                    .addComponent(txtConfirmarContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static int obtenerIdCliente(String gmail) {
        int idCliente = -1;
        ConexionBD conexionBD = new ConexionBD();
        String sql = "SELECT IDCLIENTE FROM CLIENTE WHERE GMAIL = ?";

        try (Connection conexion = conexionBD.crearConexion(); PreparedStatement preparedStatement = conexion.prepareStatement(sql)) {

            preparedStatement.setString(1, gmail);

            try (ResultSet result = preparedStatement.executeQuery()) {
                if (result.next()) {
                    idCliente = result.getInt("IDCLIENTE");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(CapturarDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return idCliente;
    }

    public static int obtenerIdCuenta(String usuario) {
        int idUsuario = -1;
        ConexionBD conexionBD = new ConexionBD();

        String sql = "SELECT IDCUENTA FROM CUENTA WHERE USUARIO = ?";

        try (Connection conexion = conexionBD.crearConexion(); PreparedStatement preparedStatement = conexion.prepareStatement(sql)) {

            preparedStatement.setString(1, usuario);

            try (ResultSet result = preparedStatement.executeQuery()) {
                if (result.next()) {
                    idUsuario = result.getInt("IDCUENTA");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(CapturarDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return idUsuario;
    }


    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        // Verificar si algún campo está vacío
        if (txtCP.getText().isEmpty()
                || txtCalle.getText().isEmpty()
                || txtNumExterior.getText().isEmpty()
                || txtEmail.getText().isEmpty()
                || txtNombre.getText().isEmpty()
                || txtApellidoPaterno.getText().isEmpty()
                || txtApellidoMaterno.getText().isEmpty()
                || txtUsuario.getText().isEmpty()
                || txtContraseña.getPassword().length == 0
                || txtConfirmarContraseña.getPassword().length == 0
                || dateChooser == null
                || txtEstado.getText().isEmpty()
                || txtCiudad.getText().isEmpty()) {
            // Al menos un campo está vacío
            JOptionPane.showMessageDialog(this, "Por favor complete todos los campos.", "Campos vacíos", JOptionPane.WARNING_MESSAGE);
        } else try {
            if (verificarUsuario(txtUsuario.getText())) {
                JOptionPane.showMessageDialog(this, "Nombre de usuario ocupado", "Usuario existente", JOptionPane.WARNING_MESSAGE);
            } else if (verificarUsuario(txtUsuario.getText()) == false) {
                ClienteDTO cliente = new ClienteDTO();
                try {
                    cliente.guardarCliente(crearCliente());
                    cliente.guardarCuenta(crearCuenta(), obtenerIdCliente(txtEmail.getText()));
                    JOptionPane.showMessageDialog(this, "Bienvenido,¡te has ingresado con exito!", "Bienvenido" + " " + txtNombre.getText(), JOptionPane.PLAIN_MESSAGE);
                    dispose();
                    ClienteRegistradoMenu menu = new ClienteRegistradoMenu(obtenerIdCuenta(txtUsuario.getText()));
                    menu.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CapturarDatos.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(CapturarDatos.class.getName()).log(Level.SEVERE, null, ex);

        }

        if (!txtContraseña.getText().equals(txtConfirmarContraseña.getText())) {
            JOptionPane.showMessageDialog(this, "La contraseña no coincide, porfavor verifique", "Contraseña no coincide", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void crearDateChooser() {
        dateChooser = new JDateChooser();
        dateChooser.setBounds(171, 143, 142, 26);

// Agregar el JDateChooser al contenedor
        add(dateChooser);
    }

    private boolean verificarUsuario(String nombreUsuario) throws SQLException {
        ConexionBD conexionBD = new ConexionBD();

        String sql = "Select count(*) from cuenta where usuario = ?";
        try (Connection conexion = conexionBD.crearConexion(); PreparedStatement preparedStatement = conexion.prepareStatement(sql)) {

            preparedStatement.setString(1, nombreUsuario);

            try (ResultSet result = preparedStatement.executeQuery()) {
                if (result.next()) {
                    int cantidadUsuarios = result.getInt(1);
                    return cantidadUsuarios > 0;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return false;

    }

    private Cliente crearCliente() {

        Date fechaSeleccionada = dateChooser.getDate();

        // Formatear la fecha en el formato "yyyy-MM-dd"
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String fechaFormateada = sdf.format(fechaSeleccionada);

        Cliente cliente = new Cliente();
        cliente.setFechaNacimiento(fechaFormateada);
        cliente.setEmail(txtEmail.getText());
        cliente.setEstado(txtEstado.getText());
        cliente.setCiudad(txtCiudad.getText());
        String[] nombres = separarNombres();
        cliente.setPrimerNombre(nombres[0]);
        if (nombres.length != 1) {
            cliente.setSegundoNombre(nombres[1]);
        }
        cliente.setApellidoPaterno(txtApellidoPaterno.getText());
        cliente.setApellidoMaterno(txtApellidoMaterno.getText());
        cliente.setCalle(txtCalle.getText());
        cliente.setCodigoPostal(Integer.parseInt(txtCP.getText()));
        cliente.setNumero(Integer.parseInt(txtNumExterior.getText()));

        return cliente;

    }

    public void limitarCalendario() {
        Calendar calendar = Calendar.getInstance();
        Date fechaActual = calendar.getTime();

        // Calcular la fecha mínima (hace 120 años desde la fecha actual)
        calendar.add(Calendar.YEAR, -120);
        Date fechaMinima = calendar.getTime();

        // Calcular la fecha máxima (hace 18 años desde la fecha actual)
        calendar.setTime(fechaActual);
        calendar.add(Calendar.YEAR, -18);
        Date fechaMaxima = calendar.getTime();

        // Establecer el rango de fechas seleccionables
        dateChooser.setSelectableDateRange(fechaMinima, fechaMaxima);
    }

    private Cuenta crearCuenta() {
        LocalDate fechaActual = LocalDate.now();
        Cuenta cuenta = new Cuenta();
        cuenta.setUsuario(txtUsuario.getText());
        cuenta.setFechaApertura(String.valueOf(fechaActual));
        cuenta.setContraseña(txtContraseña.getText());
        cuenta.setIdCliente(obtenerIdCliente(txtEmail.getText()));
        cuenta.setIdCuenta(obtenerIdCuenta(txtUsuario.getText()));
        cuenta.setSaldo(0);

        return cuenta;

    }

    private String[] separarNombres() {
        String nombresTxt = txtNombre.getText();
        String[] nombres = nombresTxt.split(" ");

        return nombres;

    }
    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        dispose();
        Menu menu = new Menu();
        menu.setVisible(true);
    }//GEN-LAST:event_btnAtrasActionPerformed


    private void btnVerContraseñaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerContraseñaMousePressed
        // TODO add your handling code here:

        txtContraseña.setEchoChar((char) 0);
        btnVerContraseña.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                btnVerContraseña.setEnabled(false); // Deshabilitar el botón al hacer clic
                temporizador.start(); // Iniciar el temporizador para habilitar el botón después de un tiempo
            }
        });
        temporizador = new Timer(2000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                btnVerContraseña.setEnabled(true); // Habilitar el botón después de 3 segundos
                temporizador.stop();
                txtContraseña.setEchoChar('*');
                // Detener el temporizador después de habilitar el botón
            }
        });
    }//GEN-LAST:event_btnVerContraseñaMousePressed

    // Función para obtener el número de días en un mes específico
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CapturarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CapturarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CapturarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CapturarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnVerContraseña;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtCP;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JPasswordField txtConfirmarContraseña;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumExterior;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
